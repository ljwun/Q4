openapi: 3.0.3
info:
  title: Auction API
  version: 1.0.0
  description: API for managing and participating in an auction system.
tags:
  - name: Auction
    description: Endpoints for managing auction items, bidding, and tracking auction events.
  - name: Authentication
    description: Endpoints for user authentication and authorization.
  - name: Image
    description: Endpoints for managing images.

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    BidEvent:
      type: object
      properties:
        user:
          type: string
        bid:
          type: integer
          format: uint32
        time:
          type: string
          format: date-time
      required:
        - user
        - bid
        - time
    SSOProvider:
      type: string
      enum:
        - internal
        - google
        - github
        - microsoft

paths:
  /auction/item:
    post:
      summary: Add a new auction item
      tags:
        - Auction
      description: Create a new auction item.
      parameters:
        - name: accessToken
          in: cookie
          description: access token for current user.
          required: false
          schema:
            type: string
            example: xxx.xxxxxx.xxxxx
      responses:
        '201':
          description: Item created successfully.
          headers:
            Location:
              description: The location of the created item.
              schema:
                type: string
                format: uri
        '400':
          description: Invalid data provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        '401':
          description: Unauthorized access.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                startingPrice:
                  type: integer
                  format: int64
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                carousels:
                  type: array
                  items:
                    type: string
                    format: uri
              required:
                - title
                - endTime
  /auction/items:
    get:
      summary: List auction items
      tags:
        - Auction
      description: Retrieve auction items with optional filters and sorting.
      parameters:
        - name: title
          in: query
          description: Search term for filtering items.
          required: false
          schema:
            type: string
        - name: startPrice
          in: query
          style: deepObject
          description: Starting price range for filtering items.
          required: false
          schema:
            type: object
            properties:
              from:
                type: integer
              to:
                type: integer
        - name: currentBid
          in: query
          style: deepObject
          description: Current bid range for filtering items.
          required: false
          schema:
            type: object
            properties:
              from:
                type: integer
              to:
                type: integer
        - name: startTime
          in: query
          style: deepObject
          description: The auction start time range for filtering items.
          required: false
          schema:
            type: object
            properties:
              from:
                type: string
                format: date-time
              to:
                type: string
                format: date-time
        - name: endTime
          in: query
          style: deepObject
          description: The auction end time range for filtering items.
          required: false
          schema:
            type: object
            properties:
              from:
                type: string
                format: date-time
              to:
                type: string
                format: date-time
        - name: sort
          in: query
          style: deepObject
          description: Sort criteria.
          required: false
          schema:
            type: object
            properties:
              key:
                type: string
                enum:
                  - title
                  - startPrice
                  - currentBid
                  - startTime
                  - endTime
                default: title
              order:
                type: string
                enum:
                  - asc
                  - desc
                default: asc
        - name: lastItemID
          in: query
          description: The last item ID of the previous page.
          required: false
          schema:
            type: string
            format: uuid
        - name:  size
          in: query
          description: The maximum number of items to return.
          required: false
          schema:
            type: integer
            format: uint32
            default: 1
        - name:  excludeEnded
          in: query
          description: Exclude ended items.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful retrieval of items.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        currentBid:
                          type: integer
                          format: uint32
                        startTime:
                          type: string
                          format: date-time
                        endTime:
                          type: string
                          format: date-time
                        isEnded:
                          type: boolean
                      required:
                        - id
                        - title
                        - currentBid
                        - startTime
                        - endTime
                        - isEnded
                required:
                  - count
                  - items
        '400':
          description: Missing parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        '404':
          description: No items found.
  /auction/item/{itemID}:
    get:
      summary: Get auction item details
      tags:
        - Auction
      description: Retrieve details of a specific auction item.
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful retrieval of item details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  startPrice:
                    type: integer
                    format: int64
                  bidRecords:
                    type: array
                    items:
                      $ref: "#/components/schemas/BidEvent"
                  startTime:
                    type: string
                    format: date-time
                  endTime:
                    type: string
                    format: date-time
                  carousels:
                    type: array
                    items:
                      type: string
                      format: uri
                required:
                  - title
                  - description
                  - startPrice
                  - bidRecords
                  - currentBid
                  - startTime
                  - endTime
                  - carousels
        '404':
          description: Item not found.
  /auction/item/{itemID}/events:
    get:
      summary: Track auction item events
      tags:
        - Auction
      description: Stream bidding events for a specific auction item using SSE.
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful connection to SSE stream.
        '403':
          description: Auction not started yet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Item not found.
        '410':
          description: Auction has ended.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /auction/item/{itemID}/bids:
    post:
      summary: Place a bid on an auction item
      tags:
        - Auction
      description: Submit a bid for a specific auction item.
      security:
        - bearerAuth: []
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accessToken
          in: cookie
          description: access token for current user.
          required: false
          schema:
            type: string
            example: xxx.xxxxxx.xxxxx
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bid:
                  type: integer
                  format: uint32
              required:
                - bid
      responses:
        '200':
          description: Bid placed successfully.
        '400':
          description: Bid too low.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized access.
        '403':
          description: Auction not started yet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Item not found.
        '410':
          description: Auction has ended.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /auth/sso/{provider}/login:
    get:
      summary: Obtain authentication url
      tags: 
        - Authentication
      description: Obtain authentication url and redirect.
      parameters:
        - name: provider
          in: path
          description: Authentication provider.
          required: true
          schema:
            $ref: "#/components/schemas/SSOProvider"
        - name: redirectUrl
          in: query
          description: Url to back after finishing authorization.
          required: true
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: Token issued successfully.
          headers:
            Set-Cookie|requestState|HttpOnly;Secure;Max-Age=120:
              description: "Add authentication state into secure http only cookie."
              schema:
                type: string
                example: "Set-Cookie state=xxx.xxx.xxx; HttpOnly; Secure; Max-Age=3600"
            Set-Cookie|requestNonce|HttpOnly;Secure;Max-Age=120:
              description: "Add authentication nonce into secure http only cookie."
              schema:
                type: string
                example: "Set-Cookie nonce=xxx.xxx.xxx; HttpOnly; Secure; Max-Age=3600"
            Set-Cookie|requestRedirectUrl|HttpOnly;Secure;Max-Age=120:
              description: "Add redirect url into secure http only cookie."
              schema:
                type: string
                example: "Set-Cookie state=https://example.com; HttpOnly; Secure; Max-Age=3600"
            Location:
              description: The location of the login page of authentication server.
              schema:
                type: string
                format: uri
        '404':
          description: Authentication provider not found.
  /auth/sso/{provider}/callback:
    get:
      summary: Exchange authorization code
      tags: 
        - Authentication
      description: Exchange authorization code to finish authentication flow and redirect to origin page.
      parameters:
        - name: provider
          in: path
          description: Authentication provider.
          required: true
          schema:
            $ref: "#/components/schemas/SSOProvider"
        - name: code
          in: query
          description: Authorization code.
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: Authorization state.
          required: true
          schema:
            type: string
        - name: requestState
          in: cookie
          description: Stored authentication state.
          required: false
          schema:
            type: string
            example: st_xxxxxxxxxx
        - name: requestNonce
          in: cookie
          description: Stored authentication nonce.
          required: false
          schema:
            type: string
            example: n_xxxxxxxxxx
        - name: requestRedirectUrl
          in: cookie
          description: Stored redirect url.
          required: false
          schema:
            type: string
            example: https://example.com
      responses:
        '200':
          description: Authentication successfully.
          headers:
            Unset-Cookie|requestState|HttpOnly;Secure:
              description: "Remove authentication state from secure http only cookie."
              schema:
                type: string
                example: "Set-Cookie state=; HttpOnly; Secure; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
            Unset-Cookie|requestNonce|HttpOnly;Secure:
              description: "Remove authentication nonce from secure http only cookie."
              schema:
                type: string
                example: "Set-Cookie nonce=; HttpOnly; Secure; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
            Unset-Cookie|requestRedirectUrl|HttpOnly;Secure:
              description: "Remove redirect url from secure http only cookie."
              schema:
                type: string
                example: "Set-Cookie state=; HttpOnly; Secure; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
            Set-Cookie|accessToken|HttpOnly;Secure;Max-Age=10800:
              description: "Add access token into secure http only cookie."
              schema:
                type: string
                format: JWT
                example: "Set-Cookie accessToken=xxx.xxx.xxx; HttpOnly; Secure; Max-Age=3600"
            Set-Cookie|username|Max-Age=10800:
              description: "Add username into secure cookie."
              schema:
                type: string
                example: "username=base64(XXXX); Secure; Max-Age=3600"
        "400":
          description: Invalid data provided to verify.
        '404':
          description: Authentication provider not found.
  /auth/logout:
    get:
      summary: Revoke authentication token
      tags: 
        - Authentication
      description: Revoke access token.
      parameters:
        - name: accessToken
          in: cookie
          description: access token for current user.
          required: false
          schema:
            type: string
            example: xxx.xxxxxx.xxxxx
        - name: username
          in: cookie
          description: name for current user.
          required: false
          schema:
            type: string
            example: xxxxxxx
      responses:
        '200':
          description: Token revoked successfully.
          headers:
            Unset-Cookie|accessToken|HttpOnly;Secure:
              description: "Remove access token from secure http only cookie."
              schema:
                type: string
                format: JWT
                example: "accessToken=; HttpOnly; Secure; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
            Unset-Cookie|username|HttpOnly;Secure:
              description: "Remove username from secure cookie."
              schema:
                type: string
                example: "username=; HttpOnly; Secure; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
  /image:
    post:
      summary: Upload an image
      tags:
        - Image
      description: Upload an image file.
      parameters:
        - name: accessToken
          in: cookie
          description: access token for current user.
          required: false
          schema:
            type: string
            example: xxx.xxxxxx.xxxxx
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Image uploaded successfully.
          headers:
            Location:
              description: The location of the uploaded image.
              schema:
                type: string
                format: uri
        '400':
          description: Invalid data provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        '401':
          description: Unauthorized access.
        '429':
          description: Too many requests.
